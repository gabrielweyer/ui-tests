pool:
  vmImage: ubuntu-20.04

trigger:
  branches:
    include:
    - main
  paths:
    include:
    - selenium-csharp/*
    - selenium-csharp.yml
    exclude:
    - selenium-csharp/README.md

pr:
  paths:
    include:
    - selenium-csharp/*
    - selenium-csharp.yml
    exclude:
    - selenium-csharp/README.md

steps:

- bash: |
    wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
    sudo apt install ./google-chrome-stable_current_amd64.deb
  displayName: Install latest Chrome
  workingDirectory: $(Build.StagingDirectory)

- bash: |
    mkdir $(Build.StagingDirectory)/screenshots
    dotnet test --logger trx --results-directory $(Common.TestResultsDirectory) --output $(Build.StagingDirectory)
  env:
    Goodreads__SignInCredentials__EmailAddress: $(Goodreads.SignInCredentials.EmailAddress)
    Goodreads__SignInCredentials__Password: $(Goodreads.SignInCredentials.Password)
  displayName: Run tests
  workingDirectory: selenium-csharp/src/SeleniumCSharp

- task: PublishPipelineArtifact@0
  inputs:
    artifactName: 'FailedTestsScreenshots'
    targetPath: '$(Build.StagingDirectory)/screenshots'
  condition: failed()
  displayName: Upload screenshot(s) after test(s) failure

- task: PublishTestResults@2
  inputs:
    testResultsFiles: '*.trx'
    testResultsFormat: 'VSTest'
    searchFolder: $(Common.TestResultsDirectory)
    publishRunAttachments: true
  condition: succeededOrFailed()
  displayName: Publish tests results
