pool:
  vmImage: 'Ubuntu-18.04'

trigger:
  branches:
    include:
    - master
  paths:
    include:
    - puppeteer/*
    - puppeteer.yml
    exclude:
    - puppeteer/README.md

steps:

- task: geeklearningio.gl-vsts-tasks-yarn.yarn-installer-task.YarnInstaller@2
  displayName: Install Yarn 1.17.3
  inputs:
    versionSpec: 1.17.3

- task: geeklearningio.gl-vsts-tasks-yarn.yarn-task.Yarn@2
  displayName: yarn install
  inputs:
    Arguments: install
    ProjectDirectory: puppeteer

- bash: |
    cd puppeteer
    yarn test-ci
  env:
    GABO_GITHUB_SIGNINCREDENTIALS_USERNAME: $(GitHub.SignInCredentials.Username)
    GABO_GITHUB_SIGNINCREDENTIALS_PASSWORD: $(GitHub.SignInCredentials.Password)
    GABO_SCREENSHOTS_ABSOLUTEPATH: $(Build.StagingDirectory)
    MOCHA_FILE: '$(Common.TestResultsDirectory)/test-results.xml'
  displayName: yarn test

- task: PublishPipelineArtifact@0
  inputs:
    artifactName: 'FailedTestsScreenshots'
    targetPath: $(Build.StagingDirectory)
  condition: failed()
  displayName: Upload screenshot(s) after test(s) failure

- task: PublishTestResults@2
  inputs:
    testResultsFiles: '*.xml'
    testResultsFormat: 'JUnit'
    searchFolder: $(Common.TestResultsDirectory)
    publishRunAttachments: true
  condition: succeededOrFailed()
  displayName: Publish tests results
